@inject PlayerDashboard.Data.IPlayerRepository PlayerRepository

<Panel Title="Recent Gaming Sessions">
    @if (_gameSessions != null)
    {
        <div class="flex items-center space-x-2 mb-3">
            <label>
                <span>Show</span>
                <select @onchange="OnSessionCountChange" class="border border-gray-500 rounded">
                    <option value="">All</option>
                    <option value="5" selected>5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                </select>
                <span>games</span>
            </label>
        </div>
        <div class="space-y-4">
            @foreach (var session in _gameSessions)
            {
                <GameSessionListItem GameSession="session" />
            }
        </div>
    }
    else
    {
        <Spinner />
    }
</Panel>

@code {
    [CascadingParameter]
    public required UserDto User { get; set; }

    private List<GameSessionDto>? _gameSessions { get; set; }
    private int? _showSessions = 5;

    protected override async Task OnInitializedAsync()
    {
        await LoadGameSessions();
    }

    private async Task OnSessionCountChange(ChangeEventArgs e)
    {
        if (Int32.TryParse(e.Value?.ToString(), out int count))
        {
            _showSessions = count;
        }
        else
        {
            _showSessions = null;
        }

        await LoadGameSessions();
    }

    private async Task LoadGameSessions()
    {
        _gameSessions = await PlayerRepository.GetGameSessionsByPlayerIdAsync(User.PlayerId, _showSessions);
    }
}
